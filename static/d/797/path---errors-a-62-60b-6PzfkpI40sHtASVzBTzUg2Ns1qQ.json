{"data":{"site":{"siteMetadata":{"title":"JλO","author":"Jean-Louis Leysens"}},"markdownRemark":{"id":"74e46fc3-fe38-5bf2-889e-ee5e61ee9fda","excerpt":"Program errors are intended to express unexpected events during the carrying out of a set of instructions.\nTo a computer, at the lowest level, an instruction…","html":"<p>Program errors are intended to express unexpected events during the carrying out of a set of instructions.\nTo a computer, at the lowest level, an instruction could be take these binary values (inputs), perform a\nlogical operation, and generate a new binary value (output). In this idealised model there is not really\nmuch unexpected that could happen — other than the power socket being yanked out. Typically this level\nof instruction is not under consideration for day to day programming. It is too low level. Advances in\nthe field of hardware and software have enable programmers to combine over hundreds of thousands of these\nlower level instructions using text with semantic value to humans.</p>\n<p>So where does this leave errors?</p>","frontmatter":{"title":"Errors","date":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"category":"code","slug":"/errors/","previous":{"fields":{"slug":"/elastic-and-zdog/"},"frontmatter":{"title":"Elastic and Zdog"}},"next":null}}