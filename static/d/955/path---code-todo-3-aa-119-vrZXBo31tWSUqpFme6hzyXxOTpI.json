{"data":{"site":{"siteMetadata":{"title":"JλO","author":"Jean-Louis Leysens"}},"markdownRemark":{"id":"c8b41213-0e32-5d96-9001-de15cd4d56f7","excerpt":"I have recently quite enjoyed the use of TODO comments. On one hand, there is\nsomething really off-putting about having TODOs littered across your code\nbase…","html":"<p>I have recently quite enjoyed the use of TODO comments. On one hand, there is\nsomething really off-putting about having TODOs littered across your code\nbase. Like threads of thought that did not have time to fully develop and are\nnow dangling appendages of what could have been if only someone had finished\nthe job at time, but for whatever reason could not.</p>\n<p>At their worst TODOs are certainly things that I would avoid placing in code.\nYour collaborators (or your future self) will come across them lacking the\ncontext of your train of thought. In this way a TODO comment will seem like a\ncompromise (a trade-off for work unfinished) that was made without a clear\nrationale. Usually a standard comment is more appropriate and should be used\nliberally in cases where code may be in a state that is hard for new readers\nto reason about.</p>\n<p>At their best TODOs are indicators of future work <em>placed right in the code\nitself</em>. It should be very clear to others (and your future self) what it is\nthat is yet to be done here; the surrounding code is your context. It could\nbe a brief description of an improvement or a simple indicator that standard\nprotocol was skipped for the sake of brevity.</p>\n<p>Writing front-end code may call for the addition of high quality copy that\nend users will read. In the early stages of development of a new feature it\nis not worth spending time on because your work is in a state of flux and\nfiguring out copy while making architecture decisions is time ill-spent. A\nsimple <code class=\"language-text\">TODO: translate</code> or <code class=\"language-text\">TODO: review copy</code> comment will save you the mental\ntax of worrying about a separate concern when all you need is a button in the UI\nthat says: “Do the thing”.</p>\n<p>Therefore I would like to propose that a TODO can be most effective not when\nthe yet-to-be-built thing is ill-conceived, but rather it is precisely at its\nmost useful when others can read the code, encounter the TODO and exclaim\n“YES! <em>That</em> would be a great next iteration”.</p>","frontmatter":{"title":"TODO","date":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"category":"code","slug":"/code/todo/","previous":{"fields":{"slug":"/code/either/"},"frontmatter":{"title":"Errors and Either"}},"next":null}}